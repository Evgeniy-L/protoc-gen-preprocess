// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: options/preprocess.proto

/*
Package preprocess is a generated protocol buffer package.

It is generated from these files:
	options/preprocess.proto

It has these top-level messages:
	PreprocessFieldOptions
	PreprocessString
*/
package preprocess

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type PreprocessString_Methods int32

const (
	PreprocessString_none       PreprocessString_Methods = 0
	PreprocessString_trim_space PreprocessString_Methods = 1
	PreprocessString_upper      PreprocessString_Methods = 2
	PreprocessString_lower      PreprocessString_Methods = 3
)

var PreprocessString_Methods_name = map[int32]string{
	0: "none",
	1: "trim_space",
	2: "upper",
	3: "lower",
}
var PreprocessString_Methods_value = map[string]int32{
	"none":       0,
	"trim_space": 1,
	"upper":      2,
	"lower":      3,
}

func (x PreprocessString_Methods) String() string {
	return proto.EnumName(PreprocessString_Methods_name, int32(x))
}
func (PreprocessString_Methods) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorPreprocess, []int{1, 0}
}

type PreprocessFieldOptions struct {
	String_ *PreprocessString `protobuf:"bytes,2,opt,name=string" json:"string,omitempty"`
}

func (m *PreprocessFieldOptions) Reset()                    { *m = PreprocessFieldOptions{} }
func (m *PreprocessFieldOptions) String() string            { return proto.CompactTextString(m) }
func (*PreprocessFieldOptions) ProtoMessage()               {}
func (*PreprocessFieldOptions) Descriptor() ([]byte, []int) { return fileDescriptorPreprocess, []int{0} }

func (m *PreprocessFieldOptions) GetString_() *PreprocessString {
	if m != nil {
		return m.String_
	}
	return nil
}

type PreprocessString struct {
	Methods []PreprocessString_Methods `protobuf:"varint,1,rep,packed,name=methods,enum=preprocess.PreprocessString_Methods" json:"methods,omitempty"`
}

func (m *PreprocessString) Reset()                    { *m = PreprocessString{} }
func (m *PreprocessString) String() string            { return proto.CompactTextString(m) }
func (*PreprocessString) ProtoMessage()               {}
func (*PreprocessString) Descriptor() ([]byte, []int) { return fileDescriptorPreprocess, []int{1} }

func (m *PreprocessString) GetMethods() []PreprocessString_Methods {
	if m != nil {
		return m.Methods
	}
	return nil
}

var E_Field = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*PreprocessFieldOptions)(nil),
	Field:         11111,
	Name:          "preprocess.field",
	Tag:           "bytes,11111,opt,name=field",
	Filename:      "options/preprocess.proto",
}

func init() {
	proto.RegisterType((*PreprocessFieldOptions)(nil), "preprocess.PreprocessFieldOptions")
	proto.RegisterType((*PreprocessString)(nil), "preprocess.PreprocessString")
	proto.RegisterEnum("preprocess.PreprocessString_Methods", PreprocessString_Methods_name, PreprocessString_Methods_value)
	proto.RegisterExtension(E_Field)
}

func init() { proto.RegisterFile("options/preprocess.proto", fileDescriptorPreprocess) }

var fileDescriptorPreprocess = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xc8, 0x2f, 0x28, 0xc9,
	0xcc, 0xcf, 0x2b, 0xd6, 0x2f, 0x28, 0x4a, 0x2d, 0x28, 0xca, 0x4f, 0x4e, 0x2d, 0x2e, 0xd6, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88, 0x48, 0x29, 0xa4, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4,
	0xea, 0x83, 0x65, 0x92, 0x4a, 0xd3, 0xf4, 0x53, 0x52, 0x8b, 0x93, 0x8b, 0x32, 0x0b, 0x4a, 0xf2,
	0x8b, 0x20, 0xaa, 0x95, 0xfc, 0xb8, 0xc4, 0x02, 0xe0, 0xea, 0xdd, 0x32, 0x53, 0x73, 0x52, 0xfc,
	0x21, 0x06, 0x0b, 0x99, 0x70, 0xb1, 0x15, 0x97, 0x14, 0x65, 0xe6, 0xa5, 0x4b, 0x30, 0x29, 0x30,
	0x6a, 0x70, 0x1b, 0xc9, 0xe8, 0x21, 0x59, 0x85, 0xd0, 0x13, 0x0c, 0x56, 0x13, 0x04, 0x55, 0xab,
	0xd4, 0xcb, 0xc8, 0x25, 0x80, 0x2e, 0x29, 0x64, 0xc7, 0xc5, 0x9e, 0x9b, 0x5a, 0x92, 0x91, 0x9f,
	0x52, 0x2c, 0xc1, 0xa8, 0xc0, 0xac, 0xc1, 0x67, 0xa4, 0x82, 0xcf, 0x2c, 0x3d, 0x5f, 0x88, 0xda,
	0x20, 0x98, 0x26, 0x25, 0x4b, 0x2e, 0x76, 0xa8, 0x98, 0x10, 0x07, 0x17, 0x4b, 0x5e, 0x7e, 0x5e,
	0xaa, 0x00, 0x83, 0x10, 0x1f, 0x17, 0x57, 0x49, 0x51, 0x66, 0x6e, 0x7c, 0x71, 0x41, 0x62, 0x72,
	0xaa, 0x00, 0xa3, 0x10, 0x27, 0x17, 0x6b, 0x69, 0x41, 0x41, 0x6a, 0x91, 0x00, 0x13, 0x88, 0x99,
	0x93, 0x5f, 0x9e, 0x5a, 0x24, 0xc0, 0x6c, 0x15, 0xc1, 0xc5, 0x9a, 0x06, 0xf2, 0x95, 0x90, 0xac,
	0x1e, 0x24, 0x2c, 0xf4, 0x60, 0x61, 0xa1, 0x87, 0xec, 0x5b, 0x89, 0xe7, 0x61, 0x60, 0x4f, 0x2a,
	0x61, 0x77, 0x18, 0xb2, 0xd2, 0x20, 0x88, 0x81, 0x4e, 0x3c, 0x51, 0x48, 0x21, 0x9d, 0xc4, 0x06,
	0x36, 0xd6, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xb5, 0x0c, 0xd1, 0xe0, 0x98, 0x01, 0x00, 0x00,
}
